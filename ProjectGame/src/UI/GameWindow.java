/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UI;

import DAL.HibernateUtil;
import java.awt.BorderLayout;
import java.util.ArrayList;
import javax.swing.JLabel;

/**
 *
 * @author 11627
 */
public class GameWindow extends javax.swing.JFrame {

    DAL.Account activeAccount;
    DAL.Character activeCharacter;
    
    LogingPanel loginPanel;
    CharacterSelectPanel CharSelectPanel;
    LootPanel lootPanel;
    CharacterCreatePanel characterCreateWindow;
    
    
    /**
     * Creates new form GameWindow
     */
    public GameWindow() {
        
        initComponents();
        
        //Load UI related info
        Services.MiscServices.LoadRaceData();
        Services.MiscServices.LoadClassData();
        
        this.setLocationRelativeTo(null);
        loginPanel = new LogingPanel(this);
        CharSelectPanel = new CharacterSelectPanel(this);
        lootPanel = new LootPanel(this);
        characterCreateWindow = new CharacterCreatePanel(this);
        
        this.setLayout(new BorderLayout(10, 10));
        ShowLogin();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Totally Not Warcraft");
        setMinimumSize(new java.awt.Dimension(433, 310));
        setPreferredSize(new java.awt.Dimension(433, 310));
        setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 433, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 299, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameWindow().setVisible(true);
                
            }
        });
        
        //Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {
        //public void run() {
        //    System.out.println("In shutdown hook");
        //}
        //}, "Shutdown-thread"));
        
    }
    
    public void SetActiveAccount(DAL.Account acc){
        this.activeAccount = acc;
    }
    
    public void ShowLogin(){
        this.add(loginPanel, BorderLayout.CENTER);
        this.repaint();
        this.pack();   
    }
    
    public void ShowCharacterSelect(){
        if (activeAccount == null) {
            ShowLogin();
        }
        
        this.add(CharSelectPanel, BorderLayout.CENTER);
        CharSelectPanel.UpdateCharacters(activeAccount.getId());
        this.repaint();
        this.pack();   
    }
    
    public void ShowLoot(){
        if (this.activeCharacter == null) {
            ShowCharacterSelect();
        }

        this.add(lootPanel, BorderLayout.CENTER);
        lootPanel.Reset();
        lootPanel.UpdateCharacterLoot();
        this.repaint();
        this.pack();   
    }
    
    void ShowCharacterCreate() {
        this.add(characterCreateWindow, BorderLayout.CENTER);
        this.repaint();
        this.pack(); 
    }
    
    public void ChangeIcon(JLabel lbl, String name){
        String sizeString = "";
        
        if (lbl.getIcon().getIconWidth() != 64) {
            sizeString = "_" + (int)lbl.getIcon().getIconWidth();
        }
        try {
            lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/" + name + sizeString + ".png")));
        } catch (Exception e) {
            System.err.println("Could not find image: " + "/Images/" + name + sizeString + ".png");
            lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Unknown.png")));
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    
}
